use "ponytest"
use "collections"

actor Main is TestList
  new create(env: Env) => PonyTest(env, this)
  new make() => None

  fun tag tests(test: PonyTest) =>
    test(_TestMT)

class iso _TestMT is UnitTest
  fun name(): String => "random/MT"

  fun apply(h: TestHelper) =>
    let mt = MT

    h.assert_eq[U64](mt.next(), 14514284786278117030)
    h.assert_eq[U64](mt.next(),  4620546740167642908)
    h.assert_eq[U64](mt.next(), 13109570281517897720)
    h.assert_eq[U64](mt.next(), 17462938647148434322)
    h.assert_eq[U64](mt.next(),   355488278567739596)
    h.assert_eq[U64](mt.next(),  7469126240319926998)
    h.assert_eq[U64](mt.next(),  4635995468481642529)
    h.assert_eq[U64](mt.next(),   418970542659199878)
    h.assert_eq[U64](mt.next(),  9604170989252516556)
    h.assert_eq[U64](mt.next(),  6358044926049913402)
    h.assert_eq[U64](mt.next(),  5058016125798318033)
    h.assert_eq[U64](mt.next(), 10349215569089701407)
    h.assert_eq[U64](mt.next(),  2583272014892537200)
    h.assert_eq[U64](mt.next(), 10032373690199166667)
    h.assert_eq[U64](mt.next(),  9627645531742285868)
    h.assert_eq[U64](mt.next(), 15810285301089087632)
    h.assert_eq[U64](mt.next(),  9219209713614924562)
    h.assert_eq[U64](mt.next(),  7736011505917826031)
    h.assert_eq[U64](mt.next(), 13729552270962724157)
    h.assert_eq[U64](mt.next(),  4596340717661012313)
    h.assert_eq[U64](mt.next(),  4413874586873285858)
    h.assert_eq[U64](mt.next(),  5904155143473820934)
    h.assert_eq[U64](mt.next(), 16795776195466785825)
    h.assert_eq[U64](mt.next(),  3040631852046752166)
    h.assert_eq[U64](mt.next(),  4529279813148173111)
    h.assert_eq[U64](mt.next(),  3658352497551999605)
    h.assert_eq[U64](mt.next(), 13205889818278417278)
    h.assert_eq[U64](mt.next(), 17853215078830450730)
    h.assert_eq[U64](mt.next(), 14193508720503142180)
    h.assert_eq[U64](mt.next(),  1488787817663097441)
    h.assert_eq[U64](mt.next(),  8484116316263611556)
    h.assert_eq[U64](mt.next(),  4745643133208116498)
    h.assert_eq[U64](mt.next(), 14333959900198994173)
    h.assert_eq[U64](mt.next(), 10770733876927207790)
    h.assert_eq[U64](mt.next(), 17529942701849009476)
    h.assert_eq[U64](mt.next(),  8081518017574486547)
    h.assert_eq[U64](mt.next(),  5945178879512507902)
    h.assert_eq[U64](mt.next(),  9821139136195250096)
    h.assert_eq[U64](mt.next(),  4728986788662773602)
    h.assert_eq[U64](mt.next(),   840062144447779464)
    h.assert_eq[U64](mt.next(),  9315169977352719788)
    h.assert_eq[U64](mt.next(), 12843335216705846126)
    h.assert_eq[U64](mt.next(),  1682692516156909696)
    h.assert_eq[U64](mt.next(), 16733405176195045732)
    h.assert_eq[U64](mt.next(),   570275675392078508)
    h.assert_eq[U64](mt.next(),  2804578118555336986)
    h.assert_eq[U64](mt.next(), 18105853946332827420)
    h.assert_eq[U64](mt.next(), 11444576169427052165)
    h.assert_eq[U64](mt.next(),  5511269538150904327)
    h.assert_eq[U64](mt.next(),  6665263661402689669)
    h.assert_eq[U64](mt.next(),  8872308438533970361)
    h.assert_eq[U64](mt.next(),  5494304472256329401)
    h.assert_eq[U64](mt.next(),  5260777597240341458)
    h.assert_eq[U64](mt.next(), 17048363385688465216)
    h.assert_eq[U64](mt.next(), 11601203342555724204)
    h.assert_eq[U64](mt.next(), 13927871433293278342)
    h.assert_eq[U64](mt.next(), 13168989862813642697)
    h.assert_eq[U64](mt.next(), 13332527631701716084)
    h.assert_eq[U64](mt.next(),  1288265801825883165)
    h.assert_eq[U64](mt.next(),  8980511589347843149)
    h.assert_eq[U64](mt.next(),  1639193574298669424)
    h.assert_eq[U64](mt.next(), 14012553476551396225)
    h.assert_eq[U64](mt.next(),  7818048564976445173)
    h.assert_eq[U64](mt.next(), 11012385938523194722)
    h.assert_eq[U64](mt.next(),  1594098091654903511)
    h.assert_eq[U64](mt.next(),  5035242355473277827)
    h.assert_eq[U64](mt.next(), 11507220397369885600)
    h.assert_eq[U64](mt.next(),  4097669440061230013)
    h.assert_eq[U64](mt.next(),  4158775797243890311)
    h.assert_eq[U64](mt.next(),  8008476757622511610)
    h.assert_eq[U64](mt.next(), 18212599999684195413)
    h.assert_eq[U64](mt.next(),  3892070972454396029)
    h.assert_eq[U64](mt.next(), 15739033291548026583)
    h.assert_eq[U64](mt.next(),  5240984520368774617)
    h.assert_eq[U64](mt.next(), 15428220128146522508)
    h.assert_eq[U64](mt.next(),  6764778500174078837)
    h.assert_eq[U64](mt.next(), 17250425930626079997)
    h.assert_eq[U64](mt.next(), 15862445320841941901)
    h.assert_eq[U64](mt.next(),  9055707723866709616)
    h.assert_eq[U64](mt.next(),   407278260229756649)
    h.assert_eq[U64](mt.next(),  6679883267401891436)
    h.assert_eq[U64](mt.next(), 13585010976506536654)
    h.assert_eq[U64](mt.next(),  9580697194899010248)
    h.assert_eq[U64](mt.next(),  7802093638911637786)
    h.assert_eq[U64](mt.next(),   535562807229422763)
    h.assert_eq[U64](mt.next(), 16772549087470588412)
    h.assert_eq[U64](mt.next(),  2069348082463192648)
    h.assert_eq[U64](mt.next(), 18080878539236249869)
    h.assert_eq[U64](mt.next(), 12688200000096479737)
    h.assert_eq[U64](mt.next(),  8989665349769173357)
    h.assert_eq[U64](mt.next(), 13575112928849473200)
    h.assert_eq[U64](mt.next(), 10859033464356012248)
    h.assert_eq[U64](mt.next(),  9748216112997718693)
    h.assert_eq[U64](mt.next(),  8405158063935141693)
    h.assert_eq[U64](mt.next(), 15279502632583570477)
    h.assert_eq[U64](mt.next(), 16055899490125284200)
    h.assert_eq[U64](mt.next(),  9066388900883848980)
    h.assert_eq[U64](mt.next(), 17884680971936629565)
    h.assert_eq[U64](mt.next(), 16395391805201036549)
    h.assert_eq[U64](mt.next(),  2550532686790805254)
